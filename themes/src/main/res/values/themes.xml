<?xml version="1.0" encoding="utf-8"?>
<resources>

    <style name="My"/>

    <style name="My.Widget" parent="android:Widget"/>

    <style name="My.Widget.ImageView" />

    <style name="My.ProgressBar" />

    <style name="My.Widget.CheckBox" parent="Widget.Material3.CompoundButton.CheckBox" />

    <style name="My.Widget.Dialog" parent="Theme.Material3.Light.NoActionBar" />

    <style name="My.Widget.TextView" parent="Widget.AppCompat.TextView" />

    <style name="My.Widget.EditText" parent="Widget.AppCompat.EditText" />

    <style name="My.Widget.Button" parent="Widget.AppCompat.Button" />

    <style name="My.Animation" parent="android:Animation"/>

    <style name="My.TextAppearance" parent="TextAppearance.AppCompat" />

    <!-- Base application theme. -->
    <style name="Theme.SmartNote" parent="Theme.MaterialComponents.DayNight.DarkActionBar">
        <!-- 应用程序的主色调 -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!-- 主色调的变种颜色 -->
        <item name="colorPrimaryVariant">@color/colorPrimaryVariant</item>
        <!-- 主色调上的文本颜色 -->
        <item name="colorOnPrimary">@color/colorOnPrimary</item>
        <!-- 应用程序的次色调 -->
        <item name="colorSecondary">@color/colorSecondary</item>
        <!-- 次色调的变种颜色 -->
        <item name="colorSecondaryVariant">@color/colorSecondaryVariant</item>
        <!-- 次色调上的文本颜色 -->
        <item name="colorOnSecondary">@android:color/black</item>
        <!-- 状态栏的颜色 -->
        <item name="android:statusBarColor">@color/statusBarColor</item>

        <!-- Customize your theme here. -->
        <!-- 使用?attr语法从当前主题中引用颜色值。这样，当切换主题时，这些属性将自动更新为新主题中的颜色值。 -->
        <item name="myApp_textColor_primary">@color/text_color_primary</item>
        <item name="myApp_textColor_secondary">@color/text_color_secondary</item>
        <item name="myApp_textColor_tertiary">@color/text_color_tertiary</item>
        <item name="myApp_textColor_quaternary">@color/text_color_quaternary</item>
        <item name="myApp_backgroundColor_primary">@color/background_color_primary</item>
        <item name="myApp_statusBarColor_primary">@color/statusBarColor</item>
    </style>

    <style name="My.Divider">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">0.5dp</item>
    </style>

    <!-- Default Divider styles -->
    <style name="My.Divider.Default" parent="@style/My.Divider">
        <item name="background">@color/divider</item>
    </style>

    <style name="My.Ripple">
        <item name="android:clickable">true</item>
    </style>

    <!-- Default Ripple styles -->
    <style name="My.Ripple.Default" parent="My.Ripple">
        <item name="android:foreground">@drawable/ripple_background</item>
    </style>

    <style name="My.Ripple.Radius8" parent="My.Ripple">
        <item name="android:foreground">@drawable/ripple_background_r8</item>
    </style>

    <style name="My.Ripple.Radius10" parent="My.Ripple">
        <item name="android:foreground">@drawable/ripple_background_r10</item>
    </style>

    <style name="My.ProgressBar.Loading" parent="My.ProgressBar">
        <item name="android:layout_width">20dp</item>
        <item name="android:layout_height">20dp</item>
        <item name="android:indeterminateDrawable"></item>
        <item name="android:indeterminateDuration">1500</item>
    </style>

    <!-- Default ImageView styles -->
    <style name="My.Widget.ImageView.Default" parent="My.Widget.ImageView">
        <item name="android:scaleType">centerCrop</item>
    </style>

    <!-- Default text styles -->
    <style name="My.TextAppearance.Default" parent="My.TextAppearance">
        <item name="android:textSize">14sp</item>
        <item name="android:textColor">?attr/myApp_textColor_primary</item>
    </style>

    <!-- Default TextView styles -->
    <style name="My.Widget.TextView.Default" parent="My.Widget.TextView">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textAppearance">@style/My.TextAppearance.Default</item>
    </style>

    <!-- Default EditText styles -->
    <style name="My.Widget.EditText.Default" parent="My.Widget.EditText">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textAppearance">@style/My.TextAppearance.Default</item>
    </style>

    <!-- Default Button styles -->
    <style name="My.Widget.Button.Default" parent="My.Widget.Button">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textAppearance">@style/My.TextAppearance.Default</item>
        <item name="android:backgroundTint">?attr/myApp_backgroundColor_primary</item>
    </style>

    <style name="My.Widget.Dialog.Material3" parent="My.Widget.Dialog">
        <item name="android:windowBackground">@android:color/transparent</item>
        <item name="android:colorBackground">@android:color/transparent</item>
        <item name="android:windowCloseOnTouchOutside">true</item> <!-- 点击外部对话框可消失 -->
        <item name="android:backgroundDimEnabled">true</item> <!-- 弹窗后背景发暗 -->
    </style>

    <!-- App 全局 loading dialog style -->
    <style name="My.Widget.Dialog.AppLoadingDialog" parent="android:style/Theme.Dialog">
        <!-- 设置对话框的背景 -->
       <item name="android:windowBackground">@android:color/transparent</item>
        <!-- 设置对话框为全屏模式 -->
       <item name="android:windowFullscreen">true</item>
        <!-- 隐藏对话框标题栏 -->
       <item name="android:windowNoTitle">true</item>
        <!-- 将对话框窗口设置为半透明 -->
       <item name="android:windowIsTranslucent">true</item>
        <!-- 设置对话框为悬浮窗口 -->
       <item name="android:windowIsFloating">true</item>
        <!-- 设置对话框的背景是否启用遮罩效果（即是否将背景变暗）-->
       <item name="android:backgroundDimEnabled">false</item>
        <!-- 设置对话框是否有内容覆盖层 -->
       <item name="android:windowContentOverlay">@null</item>
        <!-- 设置对话框窗口的边框 -->
       <item name="android:windowFrame">@null</item>
        <!-- 设置对话框进出动画的样式为输入法动画 -->
       <item name="android:windowAnimationStyle">@android:style/Animation.InputMethod</item>
    </style>

    <style name="My.Animation.WindowEnterExit_BottomInOut" parent="My.Animation">
        <item name="android:windowEnterAnimation">@anim/anim_bottom_in</item>
        <item name="android:windowExitAnimation">@anim/anim_bottom_out</item>
    </style>

    <style name="My.Animation.WindowEnterExit_Null" parent="My.Animation">
        <item name="android:windowEnterAnimation">@null</item>
        <item name="android:windowExitAnimation">@null</item>
    </style>
</resources>